name: Unity Build and Release
on:
  push:
    branches:
      - main 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    # Debug step to see the workspace
    - name: Show workspace structure before build
      run: ls -la
        
    - name: Set up Unity
      uses: game-ci/unity-builder@v2
      with:
        unityVersion: '2022.3.32f1'  # Use your actual Unity version
        targetPlatform: 'StandaloneWindows64'
        buildName: 'Eclipsed_Relics'
        buildPath: 'build'
        projectPath: '.'
        unitySerial: ${{ secrets.UNITY_SERIAL }}
    
    # Debug step to see where files were created
    - name: Show build directory
      run: |
        echo "Files in workspace:"
        find . -type f -name "*.exe" | sort
        echo "Files in build directory:"
        ls -la build || echo "build directory not found"
        echo "Files in StandaloneWindows64 directory:"
        ls -la build/StandaloneWindows64 || echo "StandaloneWindows64 directory not found"
        
    - name: Generate Version
      id: version
      run: |
        VERSION="v$(date +'%Y.%m.%d')-$(git rev-parse --short HEAD)"
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: unity-build
        path: build/**  # This will include all files in the build directory
        
    - name: Create Release on GitHub
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        body: |
          - Version: ${{ env.VERSION }}
          - Description of the release.
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/StandaloneWindows64/Eclipsed_Relics.exe  # Adjust this path based on debug output
        asset_name: Eclipsed_Relics.exe
        asset_content_type: application/octet-stream
